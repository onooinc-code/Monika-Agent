# Feature: Conversation Lifecycle Management

## 1. Objective
To provide users with the fundamental capabilities to create, navigate, manage, and delete conversations.

## 2. Core Functionality

### 2.1. Conversation Creation
- A "New Conversation" button shall be prominently displayed.
- Clicking this button immediately creates a new conversation instance in the database.
- The new conversation is initialized with the application's default global settings (e.g., default agents, modes).
- The UI automatically switches to this new, empty conversation.

### 2.2. Conversation Listing & Navigation
- All user conversations shall be listed in a collapsible side panel.
- The list must be grouped chronologically: "Today", "Yesterday", "Previous 7 Days", "This Month", etc.
- The side panel shall include a search bar to filter conversations by their titles.
- Clicking on a conversation in the list loads it into the main chat view.

### 2.3. Conversation Deletion
- Each conversation in the list shall have an option (e.g., context menu, icon) to be deleted.
- A confirmation dialog must be shown before permanent deletion to prevent accidental data loss.
- Deleting a conversation should remove it and all its associated messages from the database.

### 2.4. State Indication
- The UI must provide a visual indicator (e.g., a colored dot) next to conversation titles that have unread messages.
- A subtle loading or processing indicator should be visible on the currently active conversation when an AI request is in progress.